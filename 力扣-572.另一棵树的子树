public class InterviewTree {

    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p == null && q == null) {
            return true;
        }
        if(p == null || q == null) {
            return false;
        }
        if(p.val != q.val) {
            return false;
        }
        return isSameTree(p.left,q.left) && isSameTree(p.right,q.right);
    }


    public boolean isSubTree(TreeNode s, TreeNode t) {
        if(s == null && t == null) {
            return true;
        }
        if(s == null || t == null) {
            return false;
        }
        boolean ret = false;
        if(s.val == t.val) {
            //两棵树根节点的值相等，进一步判定s和t是不是相同的树
            ret = isSameTree(s,t);
        }
        if(!ret) {
            // s 和 t 不相同，递归看看 s.left 是否包含t
            ret = isSubTree(s.left,t);
        }
        if(!ret) {
            // s 和 t 不相同，递归看看 s.right 是否包含t
            ret = isSubTree(s.right,t);
        }
        return ret;
    }
}
